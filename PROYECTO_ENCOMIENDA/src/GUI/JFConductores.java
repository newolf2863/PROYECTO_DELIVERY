/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import basededatos.DataBase;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JRootPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon;
import javax.swing.JTextField;
import mod_administracion.Conductor;
import mod_administracion.Recepcionista;
import mod_transporte.Provincia;
import mod_transporte.Asignacion;
import validaciones.*;

/**
 *
 * @author USUARIO
 */
public class JFConductores extends javax.swing.JFrame {
//Validadores

    ValidadorDeRegistros validarRegistroF = new ValidadorDeRegistros();
    ValidadorDeSwings validadorCheck = new ValidadorDeSwings();
    private Recepcionista recepcionista;
//Conductores
    private boolean cIConductor = false;
    private boolean nombreConductor = false;
    private boolean cedulaConductorValidar = false;
    private boolean nombreConductorValidar = false;
    private boolean apellidoConductorValidar = false;
    private boolean telefonoConductorValidar = false;
    private boolean rucConductorValidar = false;
    private boolean correoConductorValidar = false;
    private boolean direccionConductorValidar = false;
    private boolean usuarioConductorValidar = false;
    private boolean claveConductorValidar = false;
    private boolean nomb = false;
//Mouse
    int xMouse, yMouse;

    public JFConductores(Recepcionista recepcionista) {
        initComponents();
        this.recepcionista = recepcionista;
        setIconImage(new ImageIcon(getClass().getResource("/iconos/exclamacion.png")).getImage());
        JFrame frame = new JFrame();
        frame.getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        setLocationRelativeTo(null);
        cargarConductores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPProovedores = new javax.swing.JPanel();
        jPGP = new javax.swing.JTabbedPane();
        jPPR = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTConductores = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jTCedulaConductor = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTNombreConductor = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTApellidoConductor = new javax.swing.JTextField();
        jLabel107 = new javax.swing.JLabel();
        jTTelefonoConductor = new javax.swing.JTextField();
        jLabel87 = new javax.swing.JLabel();
        jTCorreoConductor = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        jTDireccionConductor = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTClaveConductor = new javax.swing.JTextField();
        jTUsuario = new javax.swing.JTextField();
        jBRegistrarConductor = new javax.swing.JButton();
        jPPC = new javax.swing.JPanel();
        jPIA = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTablaConductor = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTCodigoEliminar = new javax.swing.JTextField();
        jBEliminarConductor = new javax.swing.JButton();
        jBConsultarConductor = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.CardLayout());

        JPProovedores.setBackground(new java.awt.Color(245, 245, 245));
        JPProovedores.setMinimumSize(new java.awt.Dimension(810, 540));
        JPProovedores.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPPR.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTConductores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTConductores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTConductoresMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTConductores);

        jPPR.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 975, 190));

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos conductor"));
        jPanel15.setToolTipText("");

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos personales del conductor"));

        jLabel21.setText("Cédula");

        jTCedulaConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTCedulaConductorFocusLost(evt);
            }
        });
        jTCedulaConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTCedulaConductorKeyReleased(evt);
            }
        });

        jLabel22.setText("Nombres");

        jTNombreConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTNombreConductorFocusLost(evt);
            }
        });
        jTNombreConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTNombreConductorKeyReleased(evt);
            }
        });

        jLabel23.setText("Apellido");

        jTApellidoConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTApellidoConductorFocusLost(evt);
            }
        });
        jTApellidoConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTApellidoConductorKeyReleased(evt);
            }
        });

        jLabel107.setText("Teléfono");

        jTTelefonoConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTTelefonoConductorFocusLost(evt);
            }
        });
        jTTelefonoConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTTelefonoConductorKeyReleased(evt);
            }
        });

        jLabel87.setText("Correo");

        jTCorreoConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTCorreoConductorFocusLost(evt);
            }
        });
        jTCorreoConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTCorreoConductorKeyReleased(evt);
            }
        });

        jLabel73.setText("Dirección");

        jTDireccionConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTDireccionConductorFocusLost(evt);
            }
        });
        jTDireccionConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTDireccionConductorKeyReleased(evt);
            }
        });

        jLabel25.setText("Nombre de usuario");

        jLabel26.setText("Clave");

        jTClaveConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTClaveConductorFocusLost(evt);
            }
        });
        jTClaveConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTClaveConductorKeyReleased(evt);
            }
        });

        jTUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTUsuarioFocusLost(evt);
            }
        });
        jTUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTUsuarioKeyReleased(evt);
            }
        });

        jBRegistrarConductor.setText("Registrar datos");
        jBRegistrarConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegistrarConductorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBRegistrarConductor)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel21)
                                        .addComponent(jLabel22))
                                    .addGap(12, 12, 12)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTNombreConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTCedulaConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(12, 12, 12)
                                            .addComponent(jTCorreoConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                            .addComponent(jLabel73)
                                            .addGap(12, 12, 12)
                                            .addComponent(jTDireccionConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                            .addComponent(jLabel107)
                                            .addGap(14, 14, 14)
                                            .addComponent(jTTelefonoConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGap(76, 76, 76)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel25)
                                .addComponent(jTUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26)
                                .addComponent(jTClaveConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel23)
                        .addGap(15, 15, 15)
                        .addComponent(jTApellidoConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBRegistrarConductor)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel21))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jTCedulaConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jTNombreConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel22))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTApellidoConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel23)))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel107))
                                    .addComponent(jTTelefonoConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(5, 5, 5)
                                .addComponent(jTUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel26)
                                .addGap(6, 6, 6)
                                .addComponent(jTClaveConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel87))
                            .addComponent(jTCorreoConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTDireccionConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel73)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(194, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPPR.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 970, 330));

        jPGP.addTab("Registrar Conductor", jPPR);

        jPIA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 903, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 474, Short.MAX_VALUE)
        );

        jPIA.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 110, -1, -1));

        jTablaConductor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(jTablaConductor);

        jPIA.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 650, 237));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Cedula Conductor");
        jPIA.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));

        jTCodigoEliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTCodigoEliminarKeyReleased(evt);
            }
        });
        jPIA.add(jTCodigoEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 200, 20));

        jBEliminarConductor.setText("Eliminar");
        jBEliminarConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarConductorActionPerformed(evt);
            }
        });
        jPIA.add(jBEliminarConductor, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 430, -1, -1));

        jBConsultarConductor.setText("Ver Conductor");
        jBConsultarConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultarConductorActionPerformed(evt);
            }
        });
        jPIA.add(jBConsultarConductor, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));

        javax.swing.GroupLayout jPPCLayout = new javax.swing.GroupLayout(jPPC);
        jPPC.setLayout(jPPCLayout);
        jPPCLayout.setHorizontalGroup(
            jPPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPCLayout.createSequentialGroup()
                .addComponent(jPIA, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPPCLayout.setVerticalGroup(
            jPPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPCLayout.createSequentialGroup()
                .addComponent(jPIA, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPGP.addTab("Eliminar Conductor", jPPC);

        JPProovedores.add(jPGP, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 1080, 600));

        jPanel3.setBackground(new java.awt.Color(146, 10, 48));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel69.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("Gestion de Envios");
        jPanel3.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, -1, -1));

        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Delete_32px.png"))); // NOI18N
        btnExit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnExit.setContentAreaFilled(false);
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel3.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1095, 0, 35, 35));

        JPProovedores.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, -1));

        getContentPane().add(JPProovedores, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTConductoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTConductoresMouseClicked

    }//GEN-LAST:event_jTConductoresMouseClicked

    private void jTCedulaConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTCedulaConductorFocusLost
        cedulaConductorValidar = validarRegistroF.camposDeRegistros(jTCedulaConductor, "cedula");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTCedulaConductorFocusLost

    private void jTCedulaConductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCedulaConductorKeyReleased
        cedulaConductorValidar = validarRegistroF.camposDeRegistros(jTCedulaConductor, "cedula");
    }//GEN-LAST:event_jTCedulaConductorKeyReleased

    private void jTNombreConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTNombreConductorFocusLost
        nombreConductorValidar = validarRegistroF.camposDeRegistros(jTNombreConductor, "nombre");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTNombreConductorFocusLost

    private void jTNombreConductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNombreConductorKeyReleased
        nombreConductorValidar = validarRegistroF.camposDeRegistros(jTNombreConductor, "nombre");
    }//GEN-LAST:event_jTNombreConductorKeyReleased

    private void jTApellidoConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTApellidoConductorFocusLost
        apellidoConductorValidar = validarRegistroF.camposDeRegistros(jTApellidoConductor, "nombre");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTApellidoConductorFocusLost

    private void jTApellidoConductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTApellidoConductorKeyReleased
        apellidoConductorValidar = validarRegistroF.camposDeRegistros(jTApellidoConductor, "nombre");
    }//GEN-LAST:event_jTApellidoConductorKeyReleased

    private void jTTelefonoConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTelefonoConductorFocusLost
        telefonoConductorValidar = validarRegistroF.camposDeRegistros(jTTelefonoConductor, "telefono");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTTelefonoConductorFocusLost

    private void jTTelefonoConductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTelefonoConductorKeyReleased
        telefonoConductorValidar = validarRegistroF.camposDeRegistros(jTTelefonoConductor, "telefono");
    }//GEN-LAST:event_jTTelefonoConductorKeyReleased

    private void jBRegistrarConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegistrarConductorActionPerformed
        String apellidos = jTApellidoConductor.getText();       
        String telefono = jTTelefonoConductor.getText();      
        String correo = jTCorreoConductor.getText();      
        String direccion = jTDireccionConductor.getText();        
        String nombreUsuario = jTUsuario.getText();
        String nombres = jTNombreConductor.getText();
        String cedula = jTCedulaConductor.getText();
        String clave = jTClaveConductor.getText();
        JTextField[] campos = {jTCedulaConductor, jTNombreConductor, jTApellidoConductor, jTTelefonoConductor,
            jTCorreoConductor, jTDireccionConductor, jTUsuario, jTClaveConductor};
        Boolean[] booleanoscondu = {cedulaConductorValidar, nombreConductorValidar, apellidoConductorValidar,
            telefonoConductorValidar, telefonoConductorValidar, correoConductorValidar, direccionConductorValidar,
            usuarioConductorValidar, claveConductorValidar};
        String[] nombresCampos = {"documento", "nombre", "apellido","telefono","correo","dirección"
        ,"usuario","clave"};
        List<String> errores = validadorCheck.validarCamposLista(campos, booleanoscondu, nombresCampos);
        errores.addAll(validadorCheck.validarCamposVaciosLista(campos, booleanoscondu, nombresCampos));
        
        if (DataBase.obtenerInstancia().clienteExiste(cedula)) {
            JOptionPane.showMessageDialog(this, "Cédula ya registrada", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (!DataBase.obtenerInstancia().esNombreUsuarioUnico(nombreUsuario)) {
            JOptionPane.showMessageDialog(this, "El nombre de usuario ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        

        if (!errores.isEmpty()) {
            StringBuilder mensajeError = new StringBuilder("Se encontraron los siguientes errores:\n");
            for (String error : errores) {
                mensajeError.append("- ").append(error).append("\n");
            }
            JOptionPane.showMessageDialog(null, mensajeError.toString(), "Errores", JOptionPane.ERROR_MESSAGE);
        } else {
            Object[] options = {"Si", "No"};
            int opcion = JOptionPane.showOptionDialog(null, "¿Deseas registrar los datos?", "Confirmación",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (opcion == JOptionPane.YES_OPTION) {
                DataBase.obtenerInstancia().insertarConductor(nombres, apellidos, cedula, direccion, telefono, correo, nombreUsuario, clave, recepcionista.obtenerSucursal());
        JOptionPane.showMessageDialog(
                null,
                "El registro del conductor ha sido exitoso",
                "Registro Exitoso",
                JOptionPane.INFORMATION_MESSAGE
        );
        
        Conductor conductor = new Conductor(nombres, apellidos, cedula, direccion, telefono, correo);
        Asignacion.obtenerInstancia().agregarConductor(conductor);
        vaciarCampos();
        cargarConductores();
            }
        }  
    }//GEN-LAST:event_jBRegistrarConductorActionPerformed


    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        getToolkit().beep();
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Estas seguro de quieres cerrar la ventana?", "Warning", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel3MousePressed

    private void jTCorreoConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTCorreoConductorFocusLost
        correoConductorValidar = validarRegistroF.camposDeRegistros(jTCorreoConductor, "email");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTCorreoConductorFocusLost

    private void jTCorreoConductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCorreoConductorKeyReleased
        correoConductorValidar = validarRegistroF.camposDeRegistros(jTCorreoConductor, "email");
    }//GEN-LAST:event_jTCorreoConductorKeyReleased

    private void jTDireccionConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTDireccionConductorFocusLost
        direccionConductorValidar = validarRegistroF.camposDeRegistros(jTDireccionConductor, "direccion");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTDireccionConductorFocusLost

    private void jTDireccionConductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDireccionConductorKeyReleased
        direccionConductorValidar = validarRegistroF.camposDeRegistros(jTDireccionConductor, "direccion");
    }//GEN-LAST:event_jTDireccionConductorKeyReleased

    private void jTClaveConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTClaveConductorFocusLost
        claveConductorValidar = validarRegistroF.camposDeRegistros(jTClaveConductor, "contraseña");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTClaveConductorFocusLost

    private void jTClaveConductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTClaveConductorKeyReleased
        claveConductorValidar = validarRegistroF.camposDeRegistros(jTClaveConductor, "contraseña");
    }//GEN-LAST:event_jTClaveConductorKeyReleased


    private void jTUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTUsuarioFocusLost
        usuarioConductorValidar = validarRegistroF.camposDeRegistros(jTUsuario, "usuario");
        validarRegistroF.hideTooltip();
        String nombreUsuario = jTUsuario.getText();
        if (!DataBase.obtenerInstancia().esNombreUsuarioUnico(nombreUsuario)) {
            JOptionPane.showMessageDialog(this, "El nombre de usuario ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jTUsuarioFocusLost

    private void jTUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTUsuarioKeyReleased
        usuarioConductorValidar = validarRegistroF.camposDeRegistros(jTUsuario, "usuario");
    }//GEN-LAST:event_jTUsuarioKeyReleased

    private void jBEliminarConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarConductorActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(
                null,
                "¿Estás seguro de que deseas eliminar el conductor con cedula: " + jTCodigoEliminar.getText() + "?",
                "Confirmación de Eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );
        if (respuesta == JOptionPane.YES_OPTION) {
            String codigo = jTCodigoEliminar.getText();

            // El usuario confirmó la eliminación
            Conductor conductor = Asignacion.obtenerInstancia().obtenerConductorPorCedula(codigo);
            Asignacion.obtenerInstancia().eliminarConductor(conductor);
            Asignacion.obtenerInstancia().borrarRelacionConductorVehiculo(conductor);
            Asignacion.obtenerInstancia().guardarConductores();
            JOptionPane.showMessageDialog(
                    null,
                    "El conductor con cedula " + jTCodigoEliminar.getText() + " ha sido eliminado.",
                    "Eliminación Exitosa",
                    JOptionPane.INFORMATION_MESSAGE
            );
            DefaultTableModel modeloTabla = (DefaultTableModel) jTablaConductor.getModel();
            modeloTabla.setRowCount(0);
        } else {
            // El usuario canceló la eliminación
            JOptionPane.showMessageDialog(
                    null,
                    "La eliminación del conductor con cedula " + jTCodigoEliminar.getText() + " ha sido cancelada.",
                    "Eliminación Cancelada",
                    JOptionPane.INFORMATION_MESSAGE
            );
        }
    }//GEN-LAST:event_jBEliminarConductorActionPerformed

    private void jBConsultarConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultarConductorActionPerformed
        String codigo = jTCodigoEliminar.getText();
        Conductor conductor = Asignacion.obtenerInstancia().obtenerConductorPorCedula(codigo);
        if (codigo.isBlank()) {
            JOptionPane.showMessageDialog(null, "Ingrese una cedula", "Llene el campo", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else if (conductor == null) {
            JOptionPane.showMessageDialog(null, "El Conductor no existe", "El Conductor no existe", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        String[] columnNames = {
            "Cedula", "Nombres", "Email", "Telefono"
        };
        model.setColumnIdentifiers(columnNames);
        model.addRow(new Object[]{
            conductor.getCedula(),
            conductor.getNombres() + " " + conductor.getApellidos(),
            conductor.getEmail(),
            conductor.getTelefono()
        });
        jTablaConductor.setModel(model);
        jTablaConductor.setVisible(true);
        jBEliminarConductor.setVisible(true);
    }//GEN-LAST:event_jBConsultarConductorActionPerformed

    private void jTCodigoEliminarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCodigoEliminarKeyReleased
        validarRegistroF.camposDeRegistros(jTCodigoEliminar, "cedula");
    }//GEN-LAST:event_jTCodigoEliminarKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPProovedores;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton jBConsultarConductor;
    private javax.swing.JButton jBEliminarConductor;
    private javax.swing.JButton jBRegistrarConductor;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JTabbedPane jPGP;
    private javax.swing.JPanel jPIA;
    private javax.swing.JPanel jPPC;
    private javax.swing.JPanel jPPR;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTApellidoConductor;
    private javax.swing.JTextField jTCedulaConductor;
    private javax.swing.JTextField jTClaveConductor;
    private javax.swing.JTextField jTCodigoEliminar;
    private javax.swing.JTable jTConductores;
    private javax.swing.JTextField jTCorreoConductor;
    private javax.swing.JTextField jTDireccionConductor;
    private javax.swing.JTextField jTNombreConductor;
    private javax.swing.JTextField jTTelefonoConductor;
    private javax.swing.JTextField jTUsuario;
    private javax.swing.JTable jTablaConductor;
    // End of variables declaration//GEN-END:variables

    private void vaciarCampos() {
        jTCedulaConductor.setText("");
        jTNombreConductor.setText("");
        jTApellidoConductor.setText("");
        jTTelefonoConductor.setText("");
        jTCorreoConductor.setText("");
        jTDireccionConductor.setText("");
        jTUsuario.setText("");
        jTClaveConductor.setText("");
    }

    private void cargarConductores() {
        DefaultTableModel model = (DefaultTableModel) jTConductores.getModel();
        ArrayList<Conductor> conductores = Asignacion.obtenerInstancia().obtenerConductores();
        model.setRowCount(0);

        for (Conductor conductor : conductores) {
            Object[] row = {
                conductor.getNombres(),
                conductor.getApellidos(),
                conductor.getCedula(),
                conductor.getDireccion(),
                conductor.getTelefono(),
                conductor.getEmail(),};
            model.addRow(row);
        }
    }
}
